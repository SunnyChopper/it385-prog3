//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public class RoadPool : MonoBehaviour
{
	[SerializeField] GameObject greenPrefab;
	[SerializeField] GameObject redPrefab;
	[SerializeField] GameObject actualRoadPrefab;
	private ScenarioMgr scenario;
    public static Vector3 roadOffset = new Vector3(0.5f, 0.01f, 0.5f);


	void Start()
	{
		scenario = gameObject.GetComponent("ScenarioMgr") as ScenarioMgr;
	}


	public GameObject GetGreenGhost (IntPoint2D tileLoc)
	{
		GameObject tile = this.CreateRoadTile (greenPrefab, tileLoc);
		tile.SetActive (true);
		return tile;
	}

	public GameObject GetRedGhost (IntPoint2D tileLoc)
	{
		GameObject tile = this.CreateRoadTile (redPrefab, tileLoc);
		tile.SetActive (true);
		return tile;
	}

	public GameObject GetActualTile (IntPoint2D tileLoc)
	{
		GameObject tile = this.CreateRoadTile (actualRoadPrefab, tileLoc);
		tile.SetActive (true);
		return tile;
	}
	

	private GameObject CreateRoadTile (GameObject prefabRoad, IntPoint2D tileIndex)
	{
		Vector3 roadPoint = scenario.ComputeTopLeftPointOfTile (tileIndex);
		Debug.Log("Creating a road Tile at");
		Debug.Log (roadPoint);

		GameObject road = (GameObject)Instantiate (prefabRoad);
		road.transform.position = roadPoint + roadOffset;

        Debug.Log(road.transform.position);
			
		return road;
	}
}

